C51 COMPILER V9.60.7.0   LCD                                                               02/27/2023 14:28:26 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.l
                    -st) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include "lcd.h"
   3          code unsigned char display_msg1[]="START PROGRAM";            
   4          code unsigned char display_msg2[]="FIRST INPUT";          
   5          code unsigned char display_msg3[]="NEXT INPUT"; 
   6          code unsigned char display_msg4[]="SORTING..."; 
   7          code unsigned char display_msg5[]="SORTING";
   8          code unsigned char display_msg6[]="COMPLETED";
   9          code unsigned char display_msg7[]="NUMBER TO BE";
  10          code unsigned char display_msg8[]="SEARCHED";
  11          code unsigned char display_msg9[]="THE INDEX IS";
  12          code unsigned char display_msg10[]="NUMBER";
  13          code unsigned char display_msg11[]="NOT FOUND";
  14          
  15          void main()
  16          { //Variable initialization
  17   1        unsigned char number[5];
  18   1        unsigned char num;
  19   1        unsigned char index = 0;
  20   1        unsigned char i;
  21   1        unsigned char j;
  22   1        unsigned char temp;
  23   1        
  24   1        lcd_init();
  25   1        lcd_cmd(0x80);                          
  26   1        msdelay(4);
  27   1        P1=0x0F;
  28   1        lcd_write_string(display_msg1);
  29   1        msdelay(5000);
  30   1        lcd_init();
  31   1        lcd_cmd(0x80);                          
  32   1        msdelay(4);
  33   1        lcd_write_string(display_msg2);
  34   1        msdelay(5000);
  35   1        //Input Loop
  36   1        for(i=0;i<=4;i++){
  37   2          number[i]=P1;
  38   2          P1 = number[i] << 4;
  39   2          P1 = P1|0x0F;
  40   2          lcd_init();
  41   2          lcd_cmd(0x80);                        
  42   2          msdelay(4);
  43   2        
  44   2          if(i==4){
  45   3            lcd_write_string(display_msg4);
  46   3          }
  47   2          else lcd_write_string(display_msg3);
  48   2          
  49   2          msdelay(5000);
  50   2          P1=P1&0x0F;
  51   2          if(i==4){
  52   3            lcd_init();
  53   3            lcd_cmd(0x80);                          
  54   3            msdelay(4);
C51 COMPILER V9.60.7.0   LCD                                                               02/27/2023 14:28:26 PAGE 2   

  55   3            lcd_write_string(display_msg5);
  56   3            msdelay(4);
  57   3            lcd_cmd(0xC0);
  58   3            lcd_write_string(display_msg6);
  59   3          }
  60   2          msdelay(1000);    
  61   2        }
  62   1      
  63   1        // Bubblesort
  64   1        for (i = 0; i < 4; i++){
  65   2          for (j = 0; j < 4-i; j++){
  66   3            if (number[j] > number[j + 1]){
  67   4              temp=number[j+1];
  68   4              number[j+1]=number[j];
  69   4              number[j]=temp; 
  70   4            }
  71   3          }
  72   2        }
  73   1        // display sorted array
  74   1        for(i=0;i<=4;i++){
  75   2          P1 = number[i] << 4;
  76   2          msdelay(5000);
  77   2          P1=0x0F;
  78   2          msdelay(1000);
  79   2        }
  80   1        
  81   1        P1=0xFF;
  82   1        lcd_init();
  83   1        lcd_cmd(0x80);                          
  84   1        msdelay(4);
  85   1        lcd_write_string(display_msg7);
  86   1        msdelay(4);
  87   1        lcd_cmd(0xC0);
  88   1        lcd_write_string(display_msg8);
  89   1        msdelay(5000);
  90   1        num=P1%16;
  91   1        P1=num;
  92   1        lcd_init();
  93   1        msdelay(1000);
  94   1        // linear search
  95   1        for(i=0;i<5;i++){
  96   2          if(number[i] == num){
  97   3            index=i+1;
  98   3          }
  99   2        }
 100   1        // index diaplay
 101   1        if(index!=0){
 102   2          lcd_cmd(0x80);                          
 103   2          msdelay(4);
 104   2          lcd_write_string(display_msg9);
 105   2          P1=index << 4;
 106   2          msdelay(5000);
 107   2        }
 108   1        else {
 109   2          P1=0xFF;
 110   2          lcd_cmd(0x80);                          
 111   2          msdelay(4);
 112   2          lcd_write_string(display_msg10);
 113   2          msdelay(4);
 114   2          lcd_cmd(0xC0);
 115   2          lcd_write_string(display_msg11);
 116   2          msdelay(5000);
C51 COMPILER V9.60.7.0   LCD                                                               02/27/2023 14:28:26 PAGE 3   

 117   2        }
 118   1        
 119   1        while(1);
 120   1          
 121   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    580    ----
   CONSTANT SIZE    =    118    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
